14. Copyleft and the problems with the GNU GPL

The license at the core of the efforts of the Free Software Foundation (FSF) is called the GNU General Public License,[100] sometimes shortened to GNU GPL or just the GPL. The license is based around a principle commonly referred to as copyleft. The term is a play on the word copyright and as the name suggests, uses copyright laws for the exact opposite purpose of conventional use.Rather than using copyright law to stop people from sharing software with others, copyleft licenses are designed to compel people to share their code.

As Free Software Foundation founder Richard Stallman explains:

>My work on free software is motivated by an idealistic goal: spreading freedom and cooperation. I want to encourage free software to spread, replacing proprietary software that forbids cooperation, and thus make our society better. That's the basic reason why the GNU General Public License is written the way it is—as a copyleft. All code added to a GPL-covered program must be free software, even if it is put in a separate file. I make my code available for use in free software, and not for use in proprietary software, in order to encourage other people who write software to make it free as well. I figure that since proprietary software developers use copyright to stop us from sharing, we cooperators can use copyright to give other cooperators an advantage of their own: they can use our code.[101]

That explanation cuts rather quickly to the heart of the problem with copyleft licenses from a libertarian and free market perspective. Stallman is using copyright to actively try to stop people from using his code in ways of which he does not approve. When stated in that general sense, it is easy to see why from the perspective of a libertarian, ethically copyleft is not much different than copyright.

Not all copyleft licenses are of the same strength. The GNU GPL is what is often referred to as strong copyleft to distinguish it from the so-called weak copyleft restrictions of licenses such as the GNU Lesser General Public License, or LGPL, the Mozilla Public License. As the Mozilla Foundation explains:[102]

>The MPL fills a useful space in the spectrum of free and open source software licenses, sitting between the Apache license, which does not require modifications to be shared, and the GNU family of licenses, which requires modifications to be shared under a much broader set of circumstances than the MPL.

One might object to my previous comparison of copyleft license to fully proprietary licenses on the grounds that in a world without copyright, copyleft licenses would functionally be equivalent since there would be no way to restrict access to a derivative work because there would be no legal copyright mechanism by which to do so. Logically this argument does not differential copyleft licenses as any better because it applies to any license. If I were to reserve all rights to this book via copyright, in a world without copyright, such a license would behave exactly the same as if the work were in the public domain, it wouldn't be applicable.

Obviously, functionally copyleft licenses and fully proprietary software licenses are not the same. Copyleft licenses grant users nearly all the freedoms that the lack of copyright in the first place would grant them. However, from that same functional perspective, it is clear that copyleft is more restrictive than a non-copyleft free software license. There are plenty of possible examples of ways in which a copyleft license would prevent the creation of derivative works.

Before discussing any such examples of where copyleft licenses have prevented wider distribution of software or forced someone to reinvent the proverbial wheel rather than using existing copyleft code, it is important to mention the distinctions between the GPL family of copyleft licenses and copyleft licenses applied to various kind of writing, music of video, such as the Creative Commons Attribution Share Alike License (CC-BY-SA).

The difference lies in the nature of software and how it is created. Unlike a book where the words that you need to have a copy of in order to read the book constitute the entirety of what is required to create a new copy, the version of software that you need to install it and run it on your computer is not the same version as is required to modify it. As I discussed earlier in the chapter on Richard Stallman and the free software movement, the binary version of software will allow you to run it, but only the source code provides the human readable version that can be modified and improved.

In the interest of forcing programmers to disclose their source code, GPL licenses contain very strong language about requiring the release of source code. The exact language changes from version 2 of the GPL to version 3, but basically it requires anyone who distributes GPL licensed software to either give everyone who receives a copy of the machine readable code a copy of the source code as well or along with a written offer to make the source code available at only the cost of physical distribution for no less than three years. The requirement to distribute source code is so strong and specific that according to the FSF's GPL quiz,[103] distributing a binary executable on a CD that has a website printed on it where the source code is available for free download violates the provisions of the GPL.

Microsoft goes so far as to actually ban any software with a license that requires the distribution of source code. Though it exempts several popular copyleft licenses from being excluded such as the MPL and the Eclipse Public Lisense, it explicitly bars GPL version 3 and any of the related modified versions.[104] The exact business reasons for such a decision are unknown, but

However, interestingly enough, it is not just Microsoft that prevents GPL licensed software from appearing in the Windows Phone Marketplace. Version 3 of the GPL also prohibits distributing GPL licensed software with any digital rights management.

Apple too potentially has issues with its App Store policies preventing GPL licensed software[105]

_____________

[100] A copy of the license is available online at http://www.gnu.org/licenses/gpl.html
[101] Richard M. Stallman, "Copyleft: Pragmatic Idealism", accessed 13 May 2012, available online at http://www.gnu.org/philosophy/pragmatic.html
[102] http://www.mozilla.org/MPL/2.0/FAQ.html
[103] http://www.gnu.org/cgi-bin/license-quiz.cgi
[104] The Windows® Phone Marketplace Application Provider Agreement (Updated June 2011), accessed 14 May 2012 at http://create.msdn.com/downloads/?id=638, section 1 subpoint l reads:
“Excluded License” means any license requiring, as a condition of use, modification and/or distribution of the software subject to the license, that the software or other software combined and/or distributed with it be (i) disclosed or distributed in source code form; (ii) licensed for the purpose of making derivative works; or (iii) redistributable at no charge. Notwithstanding the foregoing, the following software licenses are not considered Excluded Licenses: CDDL 1.0 (Common Development and Distribution License); CPL 1.0 (Common Public License); Eclipse Public License; Microsoft Reciprocal License (MS-RL); and MPL 1.1 (Mozilla Public License). The GNU General Public License version 3, the GNU Affero General Public License version 3, the GNU Lesser General Public License version 3, and any equivalents to the foregoing are considered Excluded Licenses.
[105] http://arstechnica.com/apple/2011/01/vlc-for-ios-vanishes-2-months-after-eruption-of-gpl-dispute/
